name: tests

on:
  push:
    branches:
      - test-ci
  pull_request:
    branches:
      - test-ci

jobs:
    cypress-test:
    #need to run on different browser
        runs-on: ubuntu-latest
        steps:
          - name: Checkout
            uses: actions/checkout@v2
          - name: Setup node
            uses: actions/setup-node@v2
            with:
              node-version: 14.x
          - name: Update npm
            run: npm install npm@latest -g
          - name: Install dependencies
            run: npm run install-all
          - name: Cypress tests
            run: npm run cypress-test
            
    jest-test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup node
              uses: actions/setup-node@v2
              with:
                node-version: 14.x
            - name: Install dependencies
              run: npm install
            - name: Jest tests
              run: npm run jest-test
              
    buildAndTest:
      name: CI Pipeline
      runs-on: ubuntu-latest
      strategy:
        matrix:
          node-version: ['12.x']

      steps:
        - uses: actions/checkout@v2

        # Initialize Node.js
        - name: Install Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v1
          with:
            node-version: ${{ matrix.node-version }}

        # Install project dependencies, test and build
        - name: Install dependencies
          run: npm install
        - name: Run build
          run: npm run build

    deploy:
      name: CD Pipeline
      runs-on: ubuntu-latest
      strategy:
        matrix:
          python-version: [3.8]
          node-version: ['12.x']
          appname: ['peerwatch-codedeploy']
          deploy-group: ['staging']
          s3-bucket: ['peerwatch-codedeploy-deployment']
          s3-filename: ['staging-peerwatch-codedeploy-${{ github.sha }}']

      needs: buildAndTest
      steps:
        - uses: actions/checkout@v2

        # Initialize Node.js
        - name: Install Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v1
          with:
            node-version: ${{ matrix.node-version }}

        # Install project dependencies and build
        - name: Install dependencies
          run: npm install
        - name: Run build
          run: npm run build

        # Install AWS CLI 2
        - name: Install AWS CLI 2
          run: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
        # Configure AWS credentials
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: AKIA5P6LH6VWHMVQHZN5
            aws-secret-access-key: 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
            aws-region: ap-southeast-1

        # Deploy push to AWS S3
        - name: AWS Deploy push
          run: |
            aws deploy push \
            --application-name ${{ matrix.appname }} \
            --description "This is a revision for the ${{ matrix.appname }}-${{ github.sha }}" \
            --ignore-hidden-files \
            --s3-location s3://${{ matrix.s3-bucket }}/${{ matrix.s3-filename }}.zip \
            --source .
        # Create deployment to CodeDeploy
        - name: AWS Create Deployment
          run: |
            aws deploy create-deployment \
             --application-name ${{ matrix.appname }} \
             --deployment-config-name CodeDeployDefault.OneAtATime \
             --deployment-group-name ${{ matrix.deploy-group }} \
             --file-exists-behavior OVERWRITE \
             --s3-location bucket=${{ matrix.s3-bucket }},key=${{ matrix.s3-filename }}.zip,bundleType=zip \
            
